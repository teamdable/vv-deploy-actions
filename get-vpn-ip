#!/usr/bin/env python3

import os
from typing import List
from pathlib import Path

import vv_configargparse
from vv_edge_info.edge_info import get_edge_info_df


def change_working_directory():
    filepath = Path(__file__).parent.parent
    os.chdir(filepath)


def write_list_to_files(input_list: List[str]) -> str:
    if os.path.isfile('.tailscale-ip'):
        os.remove('.tailscale-ip')
    for i in input_list:
        with open(".tailscale-ip", "a") as f:
            f.write(i + "\n")


def main(include_api_live_inventory: bool,
         allow_devices: List,
         exclude_devices: List,
         exclude_inventory_id: List):

    edge_info = get_edge_info_df(include_api_live_inventory = include_api_live_inventory,
                                 allow_devices = allow_devices,
                                 exclude_devices = exclude_devices,
                                 exclude_inventory_id = exclude_inventory_id)

    deploy_vpn_ips = []
    deploy_vpn_ips.extend(edge_info.vpn_ip.values)

    if not deploy_vpn_ips:
        raise Exception('배포 대상 장비가 없습니다. vpn-config.ini의 설정을 확인하세요.')

    write_list_to_files(deploy_vpn_ips)


if __name__ == '__main__':
    change_working_directory()
    
    parser = vv_configargparse.ArgumentParser(default_config_path='bin/deploy/vpn-config.ini',
                                              overriding_config_name='vv-deploy-actions-config.ini',
                                              allow_overriding=False)
    parser.add_argument('-c', '--config', is_config_file=True, help='config file path')
    parser.add_argument('--include-api-live-inventory', action='store_true',
                        help='live inventory를 결과에 포함시킬지 여부.')
    parser.add_argument('--allow-devices', action='append', default=[],
                        help='결과에 포함할 디바이스 정보. comma separated list.')
    parser.add_argument('--exclude-devices', action='append', default=[],
                        help='결과에서 제외할 디바이스 정보. allow-list보다 나중에 적용됨.')
    parser.add_argument('--exclude-inventory-id', action='append', default=[],
                        help='결과에서 제외할 인벤토리 정보. allow-list보다 나중에 적용됨.')
    args = parser.parse_args()
    try:
        main(include_api_live_inventory = args.include_api_live_inventory,
             allow_devices = args.allow_devices,
             exclude_devices = args.exclude_devices,
             exclude_inventory_id = args.exclude_inventory_id)

    except Exception as e:
        raise e
